#include "RayTracingProvider.h"
#include "RayTracing.h"

#include "MathTools.h"
#include "Grid.h"

#include "DomaineMath_GPU.h"

using gpu::DomaineMath;

/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Imported	 	*|
 \*-------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			Implementation 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

/**
 * Override
 */
Animable_I<uchar4>* RayTracingProvider::createAnimable()
    {
    DomaineMath domaineMath=DomaineMath(0,0,2*PI,2*PI);

    // Animation;
    float dt = 0.05;
    int n=2;

    // Dimension
    int dw =1000;  //16 * 60 * 2;
    int dh = 1000;//16 * 60;


    int mp = Device::getMPCount();
    int cmp = Device::getCoreCountMP();
    // Grid Cuda
    dim3 dg = dim3(mp, 4, 1);  		// disons a optimiser, depend du gpu
    dim3 db = dim3(cmp, 16, 1);   	// disons a optimiser, depend du gpu
    Grid grid(dg,db);

    int nbSphere = 300;

    return new RayTracing(grid,nbSphere,dw, dh, domaineMath, dt);
    }

/**
 * Override
 */
Image_I* RayTracingProvider::createImageGL(void)
    {
    ColorRGB_01 colorTexte(0, 0, 0); // black
    return new ImageAnimable_RGBA_uchar4(createAnimable(), colorTexte);
    }

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/
